"""Initial migration

Revision ID: 95280b9ee61e
Revises: 
Create Date: 2024-12-23 19:23:14.340484

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from common.database.sql_alchemy_types import IntEnum
from common.enums.data_stock import ExpiryType
from common.enums.data_stock import UpdateType

# revision identifiers, used by Alembic.
revision: str = '95280b9ee61e'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('store_dataset_entry',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('symbol', sa.String(), nullable=False),
    sa.Column('source', sa.Enum('IB_API', 'ALPACA_API', 'MANUAL_ENTRY', name='datasource'), nullable=False),
    sa.Column('asset_type', sa.Enum('STOCK', 'CRYPTO', 'OPTION', name='assettype'), nullable=False),
    sa.Column('data_type', sa.Enum('MARKET_ACTIVITY', 'QUOTE', 'TRADE', name='datatype'), nullable=False),
    sa.Column('granularity', sa.Enum('ONE_MINUTE', 'FIVE_MINUTES', 'THIRTY_MINUTES', 'ONE_HOUR', 'ONE_DAY', 'ONE_WEEK', 'ONE_MONTH', name='granularity'), nullable=False),
    sa.Column('start', sa.DateTime(), nullable=False),
    sa.Column('end', sa.DateTime(), nullable=True),
    sa.Column('expiry', sa.DateTime(), nullable=True),
    sa.Column('expiry_type', IntEnum(ExpiryType), nullable=True),
    sa.Column('update_type', IntEnum(UpdateType), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('symbol', 'granularity', 'start', 'end', 'source', 'data_type')
    )
    op.create_table('stock_market_activity',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('dataset_id', sa.UUID(), nullable=False),
    sa.Column('source', sa.Enum('IB_API', 'ALPACA_API', 'MANUAL_ENTRY', name='datasource'), nullable=False),
    sa.Column('symbol', sa.String(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('granularity', sa.Enum('ONE_MINUTE', 'FIVE_MINUTES', 'THIRTY_MINUTES', 'ONE_HOUR', 'ONE_DAY', 'ONE_WEEK', 'ONE_MONTH', name='granularity'), nullable=False),
    sa.Column('expiry', sa.DateTime(), nullable=True),
    sa.Column('open', sa.Float(), nullable=False),
    sa.Column('high', sa.Float(), nullable=False),
    sa.Column('low', sa.Float(), nullable=False),
    sa.Column('close', sa.Float(), nullable=False),
    sa.Column('volume', sa.Integer(), nullable=False),
    sa.Column('trade_count', sa.Integer(), nullable=False),
    sa.Column('split_factor', sa.Float(), nullable=False),
    sa.Column('dividends_factor', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['dataset_id'], ['store_dataset_entry.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_dataset_id_timestamp', 'stock_market_activity', ['dataset_id', 'timestamp'], unique=False)
    op.create_index(op.f('ix_stock_market_activity_dataset_id'), 'stock_market_activity', ['dataset_id'], unique=False)
    op.create_index(op.f('ix_stock_market_activity_expiry'), 'stock_market_activity', ['expiry'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_stock_market_activity_expiry'), table_name='stock_market_activity')
    op.drop_index(op.f('ix_stock_market_activity_dataset_id'), table_name='stock_market_activity')
    op.drop_index('ix_dataset_id_timestamp', table_name='stock_market_activity')
    op.drop_table('stock_market_activity')
    op.drop_table('store_dataset_entry')
    # ### end Alembic commands ###
