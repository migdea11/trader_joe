services:
  postgres:
    image: postgres:13
    container_name: ${DATABASE_NAME}
    ports:
      - "${DATABASE_PORT}:5432"
    env_file:
      - .env
      - ./data/store/.env
    environment:
      POSTGRES_DB: ${POSTGRES_DB_NAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASS}
    volumes:
      - ${DATA_DIR:-./volume_data}/postgres:/var/lib/postgresql/data
    security_opt:
      - "no-new-privileges:true"

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: ${BROKER_NAME}
    ports:
      - "${BROKER_PORT}:9092"
    env_file:
      - .env
      - ./data/ingest/.env
    environment:
      CLUSTER_ID: ${KAFKA_ID}
      KAFKA_LISTENERS: BROKER://0.0.0.0:9092,CONTROLLER://${BROKER_NAME}:9093
      KAFKA_ADVERTISED_LISTENERS: BROKER://${BROKER_NAME}:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: BROKER
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,BROKER:PLAINTEXT
      KAFKA_PROCESS_ROLES: 'controller,broker'
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@${BROKER_NAME}:9093'
      KAFKA_LOG_DIRS: '/var/lib/kafka/data'
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"  # Optional: Enable dynamic topic creation
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - ${DATA_DIR:-./volume_data}/kafka:/var/lib/kafka/
    security_opt:
      - "no-new-privileges:true"
    # kafka needs to write config/state during startup (e.g. /etc/kafka),
    # keep the service writable. Setting the whole container read_only prevents
    # startup scripts from creating files and causes checks like
    # "/usr/local/bin/dub path /etc/kafka/ writable" to fail.


  data_store:
    build:
      context: .
      target: prod_image
      args:
        SERVICE_PATH: data
        SERVICE_NAME: store
    hostname: ${DATA_STORE_NAME:-data_store}
    ports:
      - "${DATA_STORE_PORT}:${APP_INTERNAL_PORT}"
    volumes:
      - ./data/store/alembic.ini:/code/alembic.ini
      - ./data/store/migrations:/code/migrations
    env_file:
      - .env
      - ./data/store/.env
    environment:
      - DATABASE_URI=${DATABASE_URI:-postgresql://postgres:password@db:5432/postgres}
    image: trader_joe_data_store:prod
    security_opt:
      - "no-new-privileges:true"
    read_only: true
    depends_on:
      - postgres
      - kafka

  data_ingest:
    build:
      context: .
      target: prod_image
      args:
        SERVICE_PATH: data
        SERVICE_NAME: ingest
    hostname: ${DATA_INGEST_NAME:-data_ingest}
    ports:
      - "${DATA_INGEST_PORT}:${APP_INTERNAL_PORT}"
    env_file:
      - .env
      - ./data/ingest/.env
    image: trader_joe_data_ingest:prod
    security_opt:
      - "no-new-privileges:true"
    read_only: true
    depends_on:
      - kafka
